#!/usr/bin/env python3

import pam_mujoco
import o80_pam
import sys

MODEL_NAME = "pam_mujoco"
MUJOCO_ID = "pam_mujoco"
SEGMENT_ID_BALL = "mujoco_ball"
SEGMENT_ID_TARGET = "mujoco_target"
SEGMENT_ID_MARKER = "mujoco_marker"
SEGMENT_ID_BURST = "mujoco_burst"
SEGMENT_ID_ROBOT_MIRROR = "mujoco_mirror"
SEGMENT_ID_CONTACT_ROBOT = "mujoco_contact_robot"

if __name__ == "__main__":

    bursting_mode = "bursting" in sys.argv
    
    items = pam_mujoco.model_factory(MODEL_NAME,
                                     table=True,robot1=True)

    ball = items["ball"]
    robot = items["robot"]

    # init mujoco
    pam_mujoco.init_mujoco()

    # for detecting contact with the robot
    pam_mujoco.add_robot1_contact_free_joint(SEGMENT_ID_CONTACT_ROBOT,
                                             ball.index_qpos,ball.index_qvel,
                                             ball.geom,robot.geom_racket)

    # adding the mirror ball controller, will play
    # recorded ball trajectories, until contact with robot
    pam_mujoco.add_mirror_until_contact_free_joint(SEGMENT_ID_BALL,
                                                   ball.joint,
                                                   ball.index_qpos,ball.index_qvel,
                                                   SEGMENT_ID_CONTACT_ROBOT)

    # adding mirroring robot controller
    pam_mujoco.add_mirror_robot(SEGMENT_ID_ROBOT_MIRROR,robot.joint)

    # set bursting mode if requested
    if bursting_mode:
        pam_mujoco.add_bursting(MUJOCO_ID,SEGMENT_ID_BURST)

    # starting the thread
    pam_mujoco.execute(MUJOCO_ID,MODEL_NAME)

    # looping until requested to stop
    while not pam_mujoco.is_stop_requested(MUJOCO_ID):
        time.sleep(0.01)

    
